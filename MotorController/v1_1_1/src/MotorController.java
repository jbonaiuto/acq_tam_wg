package acq_tam_wg.MotorController.v1_1_1.src;

/*********************************/
/*                               */
/*   Importing all Nsl classes   */
/*                               */
/*********************************/

import nslj.src.system.*;
import nslj.src.cmd.*;
import nslj.src.lang.*;
import nslj.src.math.*;
import nslj.src.display.*;
import nslj.src.display.j3d.*;

/*********************************/

public class MotorController extends NslJavaModule{

//NSL Version: 3_0_n
//Sif Version: 9
//libNickName: acq_tam_wg
//moduleName:  MotorController
//versionName: 1_1_1
//floatSubModules: true


//variables 
public  NslDoutDouble1 goalPosition; // 
public  NslDinDouble1 currentPosition; // 
public  NslDinDouble0 goSignal; // 
public  NslDinDouble0 goalOrientation; // 
public  NslDinDouble0 distance; // 

//methods 
public void simTrain()
{
	process();
}

public void simRun()
{
	process();
}

protected void process()
{
	goalPosition.set(0,currentPosition.get(0));
	goalPosition.set(1,currentPosition.get(1));
	if(goSignal.get()>threshold&&!Double.isNaN(goalOrientation.get()))
	{
		double[] directionVec= new  double[]{NslOperator.sin.eval(goalOrientation.get()),NslOperator.cos.eval(goalOrientation.get())};
		goalPosition.set(0, currentPosition.get(0)+distance.get()*directionVec[0]);
		goalPosition.set(1, currentPosition.get(1)+distance.get()*directionVec[1]);
	}
}
public void makeConn(){
}

	/******************************************************/
	/*                                                    */
	/* Generated by nslc.src.NslCompiler. Do not edit these lines! */
	/*                                                    */
	/******************************************************/

	/* Constructor and related methods */
	/* makeinst() declared variables */

	/* Formal parameters */
	int size;
	double threshold;

	/* Temporary variables */

	/* GENERIC CONSTRUCTOR: */
	public MotorController(String nslName, NslModule nslParent, int size, double threshold)
{
		super(nslName, nslParent);
		this.size=size;
		this.threshold=threshold;
		initSys();
		makeInstMotorController(nslName, nslParent, size, threshold);
	}

	public void makeInstMotorController(String nslName, NslModule nslParent, int size, double threshold)
{ 
		Object[] nslArgs=new Object[]{size, threshold};
		callFromConstructorTop(nslArgs);
		goalPosition = new NslDoutDouble1("goalPosition", this, 2);
		currentPosition = new NslDinDouble1("currentPosition", this, 2);
		goSignal = new NslDinDouble0("goSignal", this);
		goalOrientation = new NslDinDouble0("goalOrientation", this);
		distance = new NslDinDouble0("distance", this);
		callFromConstructorBottom();
	}

	/******************************************************/
	/*                                                    */
	/* End of automatic declaration statements.           */
	/*                                                    */
	/******************************************************/


}//end MotorController

